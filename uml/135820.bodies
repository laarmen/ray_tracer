class image
!!!142348.cpp!!!	image(in width : int, in height : int)
		data = SDL_CreateRGBSurface(SDL_SWSURFACE,width,height,32,0,0,0,0);
!!!142476.cpp!!!	image(in img : image)
		data = img.data;
		data->refcount++;
!!!142604.cpp!!!	~image()
		if(data != NULL)
			SDL_FreeSurface(data);
!!!142988.cpp!!!	copy() : image
		image cpy(width(),height());
		blit(cpy,0,0);
		return cpy;
!!!143116.cpp!!!	get_pixel(in x : int, in y : int) : color
		if(x < 0 || y < 0 || x >= width() || y >= height()) return color(0,0,0,0);
		char* pixel = ((char*)data->pixels) + y*data->pitch + x*4;
		return color(pixel[0],pixel[1],pixel[2],pixel[3]);
!!!143244.cpp!!!	set_pixel(in x : int, in y : int, in c : color) : void
		if(x < 0 || y < 0 || x >= width() || y >= height()) return;
		uint32_t col = SDL_MapRGB(data->format, c.get_red(), c.get_green(), c.get_blue());
		char* pixel = ((char*)data->pixels) + y*data->pitch + x*4;
		*(uint32_t*)pixel = col;
!!!143372.cpp!!!	blit(inout dst : image, in srcrect : rect, in dstx : int, in dsty : int) : void
		SDL_Rect dstrect;
		dstrect.x = dstx;
		dstrect.y = dsty;
		SDL_BlitSurface(data, (SDL_Rect*)(&srcrect), dst.data, &dstrect);
!!!143500.cpp!!!	blit(inout dst : image, in dstx : int, in dsty : int) : void
		rect srcrect;
		srcrect.x = 0;
		srcrect.y = 0;
		srcrect.w = dst.data->w;
		srcrect.h = dst.data->h;
		blit(dst,srcrect,dstx,dsty);
!!!143628.cpp!!!	draw_line(in x1 : int, in y1 : int, in x2 : int, in y2 : int, in c : color) : void
		int x,y;
		int dx,dy;
		int xincr,yincr;
		int erreur;
		int i;

		set_pixel(x1,y1,c);

		dx = abs(x2-x1);
		dy = abs(y2-y1);
		if(x1<x2)
			xincr = 1;
		else
			xincr = -1;
		if(y1<y2)
			yincr = 1;
		else
			yincr = -1;

		x = x1;
		y = y1;
		if(dx>dy)
		{
			erreur = dx/2;
			for(i=0; i<dx; i++)
			{
				x += xincr;
				erreur += dy;
				if(erreur > dx)
				{
					erreur -= dx;
					y += yincr;
				}
				set_pixel(x,y,c);
			}
		}
		else
		{
			erreur = dy/2;
			for(i=0; i<dy; i++)
			{
				y += yincr;
				erreur += dx;

				if(erreur>dy)
				{
					erreur -= dy;
					x += xincr;
				}
				set_pixel(x,y,c);
			}
		}
!!!143756.cpp!!!	draw_rect(in x1 : int, in y1 : int, in x2 : int, in y2 : int, in c : color) : void
		draw_line(x1,y1,x1,y2,c);
		draw_line(x1,y1,x2,y1,c);
		draw_line(x2,y2,x1,y2,c);
		draw_line(x2,y2,x2,y1,c);
!!!143884.cpp!!!	fill_rect(in x1 : int, in y1 : int, in x2 : int, in y2 : int, in c : color) : void
		SDL_Rect r = {(Sint16)x1, (Sint16)y1, (Uint16)(x2-x1+1), (Uint16)(y2-y1+1)};
		SDL_FillRect(data, &r,
				SDL_MapRGBA(data->format, c.get_red(), c.get_green(), c.get_blue(), c.get_alpha()));
!!!150935.cpp!!!	image(in width : int, in height : int)
		data = SDL_CreateRGBSurface(SDL_SWSURFACE,width,height,32,0,0,0,0);
!!!151063.cpp!!!	image(in img : image)
		data = img.data;
		data->refcount++;
!!!151191.cpp!!!	~image()
		if(data != NULL)
			SDL_FreeSurface(data);
!!!151575.cpp!!!	copy() : image
		image cpy(width(),height());
		blit(cpy,0,0);
		return cpy;
!!!151703.cpp!!!	get_pixel(in x : int, in y : int) : color
		if(x < 0 || y < 0 || x >= width() || y >= height()) return color(0,0,0,0);
		char* pixel = ((char*)data->pixels) + y*data->pitch + x*4;
		return color(pixel[0],pixel[1],pixel[2],pixel[3]);
!!!151831.cpp!!!	set_pixel(in x : int, in y : int, in c : color) : void
		if(x < 0 || y < 0 || x >= width() || y >= height()) return;
		uint32_t col = SDL_MapRGB(data->format, c.get_red(), c.get_green(), c.get_blue());
		char* pixel = ((char*)data->pixels) + y*data->pitch + x*4;
		*(uint32_t*)pixel = col;
!!!151959.cpp!!!	blit(inout dst : image, in srcrect : rect, in dstx : int, in dsty : int) : void
		SDL_Rect dstrect;
		dstrect.x = dstx;
		dstrect.y = dsty;
		SDL_BlitSurface(data, (SDL_Rect*)(&srcrect), dst.data, &dstrect);
!!!152087.cpp!!!	blit(inout dst : image, in dstx : int, in dsty : int) : void
		rect srcrect;
		srcrect.x = 0;
		srcrect.y = 0;
		srcrect.w = dst.data->w;
		srcrect.h = dst.data->h;
		blit(dst,srcrect,dstx,dsty);
!!!152215.cpp!!!	draw_line(in x1 : int, in y1 : int, in x2 : int, in y2 : int, in c : color) : void
		int x,y;
		int dx,dy;
		int xincr,yincr;
		int erreur;
		int i;

		set_pixel(x1,y1,c);

		dx = abs(x2-x1);
		dy = abs(y2-y1);
		if(x1<x2)
			xincr = 1;
		else
			xincr = -1;
		if(y1<y2)
			yincr = 1;
		else
			yincr = -1;

		x = x1;
		y = y1;
		if(dx>dy)
		{
			erreur = dx/2;
			for(i=0; i<dx; i++)
			{
				x += xincr;
				erreur += dy;
				if(erreur > dx)
				{
					erreur -= dx;
					y += yincr;
				}
				set_pixel(x,y,c);
			}
		}
		else
		{
			erreur = dy/2;
			for(i=0; i<dy; i++)
			{
				y += yincr;
				erreur += dx;

				if(erreur>dy)
				{
					erreur -= dy;
					x += xincr;
				}
				set_pixel(x,y,c);
			}
		}
!!!152343.cpp!!!	draw_rect(in x1 : int, in y1 : int, in x2 : int, in y2 : int, in c : color) : void
		draw_line(x1,y1,x1,y2,c);
		draw_line(x1,y1,x2,y1,c);
		draw_line(x2,y2,x1,y2,c);
		draw_line(x2,y2,x2,y1,c);
!!!152471.cpp!!!	fill_rect(in x1 : int, in y1 : int, in x2 : int, in y2 : int, in c : color) : void
		SDL_Rect r = {(Sint16)x1, (Sint16)y1, (Uint16)(x2-x1+1), (Uint16)(y2-y1+1)};
		SDL_FillRect(data, &r,
				SDL_MapRGBA(data->format, c.get_red(), c.get_green(), c.get_blue(), c.get_alpha()));
!!!162967.cpp!!!	image(in width : int, in height : int)
		data = SDL_CreateRGBSurface(SDL_SWSURFACE,width,height,32,0,0,0,0);
!!!163095.cpp!!!	image(in img : image)
		data = img.data;
		data->refcount++;
!!!163223.cpp!!!	~image()
		if(data != NULL)
			SDL_FreeSurface(data);
!!!163607.cpp!!!	copy() : image
		image cpy(width(),height());
		blit(cpy,0,0);
		return cpy;
!!!163735.cpp!!!	get_pixel(in x : int, in y : int) : color
		if(x < 0 || y < 0 || x >= width() || y >= height()) return color(0,0,0,0);
		char* pixel = ((char*)data->pixels) + y*data->pitch + x*4;
		return color(pixel[0],pixel[1],pixel[2],pixel[3]);
!!!163863.cpp!!!	set_pixel(in x : int, in y : int, in c : color) : void
		if(x < 0 || y < 0 || x >= width() || y >= height()) return;
		uint32_t col = SDL_MapRGB(data->format, c.get_red(), c.get_green(), c.get_blue());
		char* pixel = ((char*)data->pixels) + y*data->pitch + x*4;
		*(uint32_t*)pixel = col;
!!!163991.cpp!!!	blit(inout dst : image, in srcrect : rect, in dstx : int, in dsty : int) : void
		SDL_Rect dstrect;
		dstrect.x = dstx;
		dstrect.y = dsty;
		SDL_BlitSurface(data, (SDL_Rect*)(&srcrect), dst.data, &dstrect);
!!!164119.cpp!!!	blit(inout dst : image, in dstx : int, in dsty : int) : void
		rect srcrect;
		srcrect.x = 0;
		srcrect.y = 0;
		srcrect.w = dst.data->w;
		srcrect.h = dst.data->h;
		blit(dst,srcrect,dstx,dsty);
!!!164247.cpp!!!	draw_line(in x1 : int, in y1 : int, in x2 : int, in y2 : int, in c : color) : void
		int x,y;
		int dx,dy;
		int xincr,yincr;
		int erreur;
		int i;

		set_pixel(x1,y1,c);

		dx = abs(x2-x1);
		dy = abs(y2-y1);
		if(x1<x2)
			xincr = 1;
		else
			xincr = -1;
		if(y1<y2)
			yincr = 1;
		else
			yincr = -1;

		x = x1;
		y = y1;
		if(dx>dy)
		{
			erreur = dx/2;
			for(i=0; i<dx; i++)
			{
				x += xincr;
				erreur += dy;
				if(erreur > dx)
				{
					erreur -= dx;
					y += yincr;
				}
				set_pixel(x,y,c);
			}
		}
		else
		{
			erreur = dy/2;
			for(i=0; i<dy; i++)
			{
				y += yincr;
				erreur += dx;

				if(erreur>dy)
				{
					erreur -= dy;
					x += xincr;
				}
				set_pixel(x,y,c);
			}
		}
!!!164375.cpp!!!	draw_rect(in x1 : int, in y1 : int, in x2 : int, in y2 : int, in c : color) : void
		draw_line(x1,y1,x1,y2,c);
		draw_line(x1,y1,x2,y1,c);
		draw_line(x2,y2,x1,y2,c);
		draw_line(x2,y2,x2,y1,c);
!!!164503.cpp!!!	fill_rect(in x1 : int, in y1 : int, in x2 : int, in y2 : int, in c : color) : void
		SDL_Rect r = {(Sint16)x1, (Sint16)y1, (Uint16)(x2-x1+1), (Uint16)(y2-y1+1)};
		SDL_FillRect(data, &r,
				SDL_MapRGBA(data->format, c.get_red(), c.get_green(), c.get_blue(), c.get_alpha()));
